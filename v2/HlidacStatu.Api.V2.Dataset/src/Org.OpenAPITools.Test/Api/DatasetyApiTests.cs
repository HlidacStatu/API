/*
 * HlidacStatu_ApiV2
 *
 * REST API Hlídače státu
 *
 * The version of the OpenAPI document: v2
 * Contact: podpora@hlidacstatu.cz
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing DatasetyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DatasetyApiTests : IDisposable
    {
        private DatasetyApi instance;

        public DatasetyApiTests()
        {
            instance = new DatasetyApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DatasetyApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DatasetyApi
            //Assert.IsType<DatasetyApi>(instance);
        }

        /// <summary>
        /// Test ApiV2DatasetyCreate
        /// </summary>
        [Fact]
        public void ApiV2DatasetyCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Registration data = null;
            //var response = instance.ApiV2DatasetyCreate(data);
            //Assert.IsType<DSCreatedDTO>(response);
        }

        /// <summary>
        /// Test ApiV2DatasetyDatasetItemBulkInsert
        /// </summary>
        [Fact]
        public void ApiV2DatasetyDatasetItemBulkInsertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string datasetId = null;
            //Object data = null;
            //var response = instance.ApiV2DatasetyDatasetItemBulkInsert(datasetId, data);
            //Assert.IsType<List<DSItemResponseDTO>>(response);
        }

        /// <summary>
        /// Test ApiV2DatasetyDatasetItemExists
        /// </summary>
        [Fact]
        public void ApiV2DatasetyDatasetItemExistsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string datasetId = null;
            //string itemId = null;
            //var response = instance.ApiV2DatasetyDatasetItemExists(datasetId, itemId);
            //Assert.IsType<bool>(response);
        }

        /// <summary>
        /// Test ApiV2DatasetyDatasetItemGet
        /// </summary>
        [Fact]
        public void ApiV2DatasetyDatasetItemGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string datasetId = null;
            //string itemId = null;
            //var response = instance.ApiV2DatasetyDatasetItemGet(datasetId, itemId);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ApiV2DatasetyDatasetItemUpdate
        /// </summary>
        [Fact]
        public void ApiV2DatasetyDatasetItemUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string datasetId = null;
            //string itemId = null;
            //Object data = null;
            //string? mode = null;
            //var response = instance.ApiV2DatasetyDatasetItemUpdate(datasetId, itemId, data, mode);
            //Assert.IsType<DSItemResponseDTO>(response);
        }

        /// <summary>
        /// Test ApiV2DatasetyDatasetSearch
        /// </summary>
        [Fact]
        public void ApiV2DatasetyDatasetSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string datasetId = null;
            //string? dotaz = null;
            //int? strana = null;
            //string? sort = null;
            //string? desc = null;
            //var response = instance.ApiV2DatasetyDatasetSearch(datasetId, dotaz, strana, sort, desc);
            //Assert.IsType<SearchResultDTOObject>(response);
        }

        /// <summary>
        /// Test ApiV2DatasetyDelete
        /// </summary>
        [Fact]
        public void ApiV2DatasetyDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string datasetId = null;
            //var response = instance.ApiV2DatasetyDelete(datasetId);
            //Assert.IsType<bool>(response);
        }

        /// <summary>
        /// Test ApiV2DatasetyDetail
        /// </summary>
        [Fact]
        public void ApiV2DatasetyDetailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string datasetId = null;
            //var response = instance.ApiV2DatasetyDetail(datasetId);
            //Assert.IsType<Registration>(response);
        }

        /// <summary>
        /// Test ApiV2DatasetyGetAll
        /// </summary>
        [Fact]
        public void ApiV2DatasetyGetAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiV2DatasetyGetAll();
            //Assert.IsType<SearchResultDTORegistration>(response);
        }

        /// <summary>
        /// Test ApiV2DatasetyUpdate
        /// </summary>
        [Fact]
        public void ApiV2DatasetyUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Registration data = null;
            //var response = instance.ApiV2DatasetyUpdate(data);
            //Assert.IsType<Registration>(response);
        }
    }
}
